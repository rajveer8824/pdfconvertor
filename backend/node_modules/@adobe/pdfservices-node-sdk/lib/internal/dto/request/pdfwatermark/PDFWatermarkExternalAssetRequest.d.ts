import { PDFWatermarkParamsPayload } from "./PDFWatermarkParamsPayload";
import { PDFServicesApiRequest } from "../PDFServicesApiRequest";
import { ExternalAsset } from "../../../../io/ExternalAsset";
import { NotifierConfig } from "../../../../config/notifier/NotifierConfig";
import { PDFWatermarkParams } from "../../../../pdfjobs/params/pdfwatermark/PDFWatermarkParams";
export declare class PDFWatermarkExternalAssetRequest implements PDFServicesApiRequest {
    protected readonly _inputs: PDFWatermarkExternalAssetInput;
    protected readonly _output?: ExternalAsset;
    protected readonly _params?: PDFWatermarkParamsPayload;
    protected readonly _notifiers?: NotifierConfig[];
    constructor(inputAsset: ExternalAsset, watermarkAsset: ExternalAsset, watermarkParams?: PDFWatermarkParams, outputAsset?: ExternalAsset, notifierConfigList?: NotifierConfig[]);
}
declare class PDFWatermarkExternalAssetInput {
    private readonly _document;
    private readonly _watermarkDocument;
    constructor(document: ExternalAsset, watermarkDocument: ExternalAsset);
}
export {};
