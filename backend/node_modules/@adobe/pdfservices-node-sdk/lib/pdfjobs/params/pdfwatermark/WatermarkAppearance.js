"use strict";
/*
 * Copyright 2024 Adobe
 * All Rights Reserved.
 *
 * NOTICE: Adobe permits you to use, modify, and distribute this file in
 * accordance with the terms of the Adobe license agreement accompanying
 * it. If you have received this file from a source other than Adobe,
 * then your use, modification, or distribution of it requires the prior
 * written permission of Adobe.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.WatermarkAppearance = void 0;
const ValidationUtil_1 = require("../../../internal/util/ValidationUtil");
/**
 * watermark appearance parameter for {@link PDFServicesJobParams}.
 */
class WatermarkAppearance {
    /**
     * Constructs a new `WatermarkAppearance` instance.
     *
     * @param params The parameters for constructing an instance of `WatermarkAppearance`.
     * @param [params.appearOnForeground] Placement of watermark on the page.
     * Watermark will be on foreground when it is true or background when it is false. Default is true.
     * @param [params.opacity] Percentage value specifying watermark opacity.
     * Specified as an Integer value from 0 to 100. default is 100.
     */
    constructor(params) {
        ValidationUtil_1.ValidationUtil.validateWatermarkAppearanceParams(params);
        this._appearOnForeground = params.appearOnForeground;
        this._opacity = params.opacity;
    }
    /**
     * Returns a boolean value specifying whether watermark will be on foreground or background.
     *
     * @returns `true` if watermark will be on foreground, `false` if watermark will be on background
     */
    get appearOnForeground() {
        return this._appearOnForeground;
    }
    /**
     * Returns an Integer value from 0 to 100 specifying watermark opacity
     *
     * @returns an Integer value from 0 to 100 specifying watermark opacity.
     */
    get opacity() {
        return this._opacity;
    }
}
exports.WatermarkAppearance = WatermarkAppearance;
//# sourceMappingURL=WatermarkAppearance.js.map